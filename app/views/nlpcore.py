# -*- coding: utf-8 -*-

from app import engine
from flask import render_template_string

@engine.route('/')
def nlpcore_home():
    return render_template_string("<!doctype html> <html><title>NLP Core</title><head><style id=\"vncorenlp-2022-styl\"> @import url('https://fonts.googleapis.com/css2?family=Noto+Serif:ital,wght@0,400;0,700;1,400;1,700&display=swap'); div#vncorenlp-2022 * { box-sizing: border-box; outline: none; } div#vncorenlp-2022 input[type=\"radio\"] { display:none; } div#vncorenlp-2022 { position: fixed; top: 2%; right: 2%; width: 400px; z-index: 9999999; background-color: #fff; padding: 10px; font-family: 'Noto Serif',serif; box-shadow: 0 1px 16px 0 rgb(0 0 0 / 30%); } div#vncorenlp-2022 nav { border-bottom: 1px solid #ddd; display: flex; align-items: center; justify-content: space-between; } div#vncorenlp-2022 label { padding: 8px 10px; display: inline-block; border: 1px solid transparent; cursor:pointer; margin-bottom:-1px; } #vncorenlp-2022 main { padding-top: 10px 0 0; } .nlp-tool button { padding: 3px; margin: 0 3px 3px 0; border-radius: 3px; width: 31.80%; cursor:pointer; background-color: #eee; text-align:left; border:none; } .nlp-action { text-align:right; margin-bottom: 10px; } .nlp-action button { width:auto; text-align:center; padding: 3px 15px; } .nlp-action button[data-cmd=\"Clear\"] { background-color: #fc6; } .nlp-action button[data-cmd=\"Save\"] { background-color: #6c9; } .nlp-tool button[data-cmd=\"A\"] { background-color: #fc6; } .nlp-tool button[data-cmd=\"R\"] { background-color: #c99; } .nlp-tool button[data-cmd=\"C\"] { background-color: #cc9; } .nlp-tool button[data-cmd=\"L\"] { background-color: #99c; } .nlp-tool button[data-cmd=\"I\"] { background-color: #6f6; } .nlp-tool button[data-cmd=\"N\"] { background-color: #ccc; } .nlp-tool button[data-cmd=\"M\"] { background-color: #6c9; } .nlp-tool button[data-cmd=\"E\"] { background-color: #f9c; } .nlp-tool button[data-cmd=\"Np\"] { background-color: #ee7; } .nlp-tool button[data-cmd=\"V\"] { background-color: #cf6; } .nlp-tool button code, .help code { color:brown; background-color:transparent; } .nlp-tab { display:none; } #nlp-tagging:checked ~ main .pos-tagging, #nlp-help:checked ~ main .help{ display:block; } #nlp-tagging:checked ~ nav label[for=\"nlp-tagging\"], #nlp-help:checked ~ nav label[for=\"nlp-help\"] { background-color: #fff; border: 1px solid #ddd; border-bottom-color: transparent; border-radius: 4px 4px 0 0; } .pos-tagging p { padding: 10px; border: 1px solid #ddd; border-radius: 4px; margin-bottom: 10px; outline: none; min-height:40px; } div#vncorenlp-2022 .help ul { list-style:none; margin: 10px 0; padding:0; } div#vncorenlp-2022 .help li { color:#000; list-style:none; } div#vncorenlp-2022 .help li em { color:#999; } </style></head><body cz-shortcut-listen=\"true\"><div id=\"vncorenlp-2022\"><input type=\"radio\" id=\"nlp-tagging\" name=\"tab\" checked=\"checked\"><input type=\"radio\" name=\"tab\" id=\"nlp-help\"><nav><div><label for=\"nlp-tagging\">Gắn nhãn</label><label for=\"nlp-help\">Hướng dẫn</label></div></nav> <main> <div class=\"nlp-tab pos-tagging\"> <p contenteditable=\"true\" spellcheck=\"false\"></p> <div class=\"nlp-tool nlp-action\"> <button data-cmd=\"Clear\">Làm lại</button> <button data-cmd=\"Check\">Chạy thử</button> <button data-cmd=\"Save\">Lưu lại</button> </div> <div class=\"nlp-tool\"> <button data-cmd=\"A\"><code>/A</code> Tính từ</button> <button data-cmd=\"C\"><code>/C</code> Liên từ</button> <button data-cmd=\"E\"><code>/E</code> Giới từ</button> <button data-cmd=\"I\"><code>/I</code> Thán từ</button> <button data-cmd=\"L\"><code>/L</code> Định từ</button> <button data-cmd=\"M\"><code>/M</code> Số từ</button> <button data-cmd=\"N\"><code>/N</code> Danh từ</button> <button data-cmd=\"Nc\"><code>/Nc</code> Phân loại</button> <button data-cmd=\"Ny\"><code>/Ny</code> Viết tắt</button> <button data-cmd=\"Np\"><code>/Np</code> Tên riêng</button> <button data-cmd=\"Nu\"><code>/Nu</code> Đơn vị</button> <button data-cmd=\"P\"><code>/P</code> Đại từ</button> <button data-cmd=\"R\"><code>/R</code> Phó từ</button> <button data-cmd=\"S\"><code>/S</code> Yếu tố</button> <button data-cmd=\"T\"><code>/T</code> Trợ từ</button> <button data-cmd=\"V\"><code>/V</code> Động từ</button> <button data-cmd=\"X\"><code>/X</code> Từ loại</button> <button data-cmd=\"F\"><code>/F</code> Ký tự</button> </div> </div> <div class=\"nlp-tab help\"> <ul> <li><code>/A</code> - <em>Adjective</em> (Tính từ)</li> <li><code>/C</code> - <em>Coordinating conjunction</em> (Liên từ)</li> <li><code>/E</code> - <em>Preposition</em> (Giới từ)</li> <li><code>/I</code> - <em>Interjection</em> (Thán từ)</li> <li><code>/L</code> - <em>Determiner</em> (Định từ)</li> <li><code>/M</code> - <em>Numeral</em> (Số từ)</li> <li><code>/N</code> - <em>Common noun</em> (Danh từ)</li> <li><code>/Nc</code> - <em>Noun Classifier</em> (Danh từ chỉ loại)</li> <li><code>/Ny</code> - <em>Noun abbreviation</em> (Từ viết tắt)</li> <li><code>/Np</code> - <em>Proper noun</em> (Danh từ riêng)</li> <li><code>/Nu</code> - <em>Unit noun</em> (Danh từ đơn vị)</li> <li><code>/P</code> - <em>Pronoun</em> (Đại từ)</li> <li><code>/R</code> - <em>Adverb</em> (Phó từ)</li> <li><code>/S</code> - <em>Subordinating conjunction</em> (Yếu tố cấu tạo từ)</li> <li><code>/T</code> - <em>Auxiliary, modal words</em> (Trợ từ)</li> <li><code>/V</code> - <em>Verb</em> (Động từ)</li> <li><code>/X</code> - <em>Unknown</em> (Không phân loại)</li> <li><code>/F</code> - <em>Filtered out (punctuation)</em> (Ký tự đặc biệt)</li> </ul> </div> </main></div><script>document.addEventListener('DOMContentLoaded', function(e) { document.querySelector('.pos-tagging p[contenteditable]').addEventListener('paste', function(e) { e.preventDefault(); const text = (e.originalEvent || e).clipboardData.getData('text/plain'); window.document.execCommand('insertText', false, text); }); document.querySelectorAll('button[data-cmd]').forEach(function(el) { el.addEventListener('click', function(e) { e.preventDefault(); var cmd = this.dataset.cmd; if (cmd) { var paragraph = this.parentNode.parentNode.querySelector('p[contenteditable]'); if (!paragraph) { return false; } if (cmd.toLowerCase() == 'check') { var text = paragraph.textContent.trim(); text = text.replace(/\\/[A-Za-z]{1,2}\s+/g, ' ').replace(/ {2,}/g, ' ').trim(); fetch('/api/tagger', { method: 'POST', headers: { 'Content-Type': 'application/x-www-form-urlencoded', }, body: 'text='+encodeURIComponent(text) }).then(function(resp) { return resp.json(); }).then(function(data) { if (!data.hasOwnProperty('error')) { paragraph.textContent = data; } }).catch(function(e) { console.log({error:e.message}); }); } else if (cmd.toLowerCase() == 'clear') { var text = paragraph.textContent.trim(); text = (text + ' ').replace(/\\/[A-Za-z]{1,2}\s+/g, ' ').replace(/ {2,}/g, ' ').trim(); paragraph.textContent = text; } else if (cmd.toLowerCase() == 'save'){ var text = paragraph.textContent.trim(); text = text.replace(/ {2,}/g, ' ').trim(); if (/\\/[A-Za-z]{1,2}/.test(text) == true) { fetch('/api/train',{ method: 'POST', headers: { 'Content-Type': 'application/x-www-form-urlencoded', }, body: 'text='+encodeURIComponent(text) }).then(function(resp) { return resp.json(); }).then(function(data) { if(data.hasOwnProperty('error')) { alert(data.error); } else { paragraph.textContent = ''; } }).catch(function(e) { console.log({error:e.message}); }); } } else { var selection = document.getSelection(); if(selection.focusNode.parentNode == paragraph) { var raw = selection.toString(); var allText = paragraph.textContent.trim(); var sel = raw.trim().replace(/\\/[A-Za-z]{1,2}/,''); if (sel.length > 0) { text = ' ' + sel + '/' + cmd + ' '; allText = allText.replace(raw, text); allText = allText.replace(/ {2,}/g,' ').trim(); paragraph.textContent = allText; } } } } return false; }, false); }); });</script></body></html>")
